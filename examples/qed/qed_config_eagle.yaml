# Optimize the Quantitative Estimate of Drug-likeness (QED)
# See https://www.rdkit.org/docs/source/rdkit.Chem.QED.html
# Starting point: a single carbon (C)
#   - actions: add a bond or an atom
#   - state: molecule state
#   - reward: 0, unless a terminal state is reached, then the qed estimate of the molecule


run_config:
    run_id: 'qed_example2'
    # If running locally, specify the script here:
    start_script: "optimize_qed.py --config qed_config_eagle.yaml"
    # Settings for a high performance computing (HPC) environment
    # where the policy is trained on GPUs and the rollout is done on CPUs
#    hpc_config: 
#        start_policy_script: "optimize_qed.py --config qed_config.yaml --train-policy"
#        start_rollout_script: "optimize_qed.py --config qed_config.yaml --rollout"
#        working_dir: "/scratch/jlaw/rlmolecule/qed/"
#        time: "4:00:00"
#        account: "rlmolecule"
#        job_name: "qed_example"
#        rollout_nodes: 2
#        rollout_ntasks_per_node: 6
#        policy_nodes: 1
#        policy_gpus: 2
#        # python environment used for the GPU nodes
#        policy_env: "source /nopt/nrel/apps/anaconda/5.3/etc/profile.d/conda.sh; conda activate /projects/rlmolecule/pstjohn/envs/tf2_gpu"
#        # python environment used for the CPU nodes
#        rollout_env: "source /nopt/nrel/apps/anaconda/5.3/etc/profile.d/conda.sh; conda activate /projects/rlmolecule/pstjohn/envs/tf2_cpu"

# Parameters for setting up the problem
problem_config:
    # size of the hallway
    size: 5
    # max # steps the walker is allowed to take
    max_steps: 32

# Parameters for training the policy model
alphazero_config:
    # TODO add the rest of the parameters
    ranked_reward_alpha: 0.75
    reward_buffer_max_size: 250
    reward_buffer_min_size: 50
    policy_buffer_max_size: 256
    policy_buffer_min_size: 128

mcts_config:
    # TODO add the rest of the parameters
    num_mcts_samples: 256
    max_depth: 1000000
    

# Database settings for the Object Relational Model (ORM)
# Used to store games and communicate between the policy model (run on GPUs) and rollout (run on CPUs)
sql_database:
   # # default database settings:
   # drivername: "sqlite"
   # db_file: "qed_data.db"

   # settings to connect to NREL's yuma database
   drivername: "postgresql+psycopg2"
   dbname: "bde"
   port: "5432"
   host: "yuma.hpc.nrel.gov"
   user: "rlops"
   # read the password from a file
   passwd_file: '/projects/rlmolecule/rlops_pass'

